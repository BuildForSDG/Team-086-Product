name: CI

on:
  pull_request:
  push:
    branches: 
        - master
        - develop
  
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: 3.7

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Set up Python ${{ matrix.python-version }}
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.2

    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{hashFiles('**/poetry.lock')}}
        restore-keys: | poetry-${{hashFiles('**/poetry.lock')}}

    - name: Set Poetry config
      run: poetry config settings.virttualenvs.in-project false poetry config settings.viertualenvs.path ~/.virtualenvs

    - name: Install Dependencies
      run: poetry install
      if: steps.cache.output.cache-hit!= 'true'

    - name: Code Quality
      run: poetry run black. --check

    - name: Test with pytest
      env:
        DJANGO_SETTINGS_MODULE: project.settings
        SECRET_FILE: .confidential/ci.json
        run: poetry run pytest --cov . -n 2

      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test
      env:
        CI: true
